name: Tests

on:
  - push
  - pull_request

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/actions@v2.0.0

  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest]
        python-version: ["3.9.7"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      # Install Wine because asm6.exe requires it
      - name: Install Wine
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          wget -nc https://dl.winehq.org/wine-builds/winehq.key
          sudo apt-key add winehq.key
          sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main'
          sudo apt update
          sudo apt install --install-recommends winehq-stable

      # Check out the repo and set up python
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Install Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Load cached venv if it exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      # Install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      # Install root project
      - name: Install library
        run: poetry install --no-interaction

      # Run test suite
      - name: Run tests
        run: |
          source $VENV
          pytest tests/ --verbose --failed-first --ignore="tests/game/gfx/objects/" --ignore="tests/game/level/test_level_drawing.py" --ignore="tests/gui/test_world_map.py"
